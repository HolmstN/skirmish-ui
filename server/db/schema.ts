/* tslint:disable */
/* eslint-disable */


/**
 * AUTO-GENERATED FILE - DO NOT EDIT!
 *
 * This file was automatically generated by pg-to-ts v.4.1.0
 * $ pg-to-ts generate -c postgresql://username:password@localhost:5432/skirmish -t games -t schema_migrations -t teams -t tid -t tournament_methods -t tournament_players -t tournaments -t user_gamedata -t users -s public
 *
 */


export type Json = unknown;

// Table games
export interface Games {
  id: number;
  name: string;
  short_name: string | null;
  data: Json | null;
}
export interface GamesInput {
  id?: number;
  name: string;
  short_name?: string | null;
  data?: Json | null;
}
const games = {
  tableName: 'games',
  columns: ['id', 'name', 'short_name', 'data'],
  requiredForInsert: ['name'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as Games,
  $input: null as unknown as GamesInput
} as const;

// Table schema_migrations
export interface SchemaMigrations {
  version: number;
  dirty: boolean;
}
export interface SchemaMigrationsInput {
  version: number;
  dirty: boolean;
}
const schema_migrations = {
  tableName: 'schema_migrations',
  columns: ['version', 'dirty'],
  requiredForInsert: ['version', 'dirty'],
  primaryKey: 'version',
  foreignKeys: {},
  $type: null as unknown as SchemaMigrations,
  $input: null as unknown as SchemaMigrationsInput
} as const;

// Table teams
export interface Teams {
  id: string;
  name: string;
  logo: string | null;
}
export interface TeamsInput {
  id?: string;
  name: string;
  logo?: string | null;
}
const teams = {
  tableName: 'teams',
  columns: ['id', 'name', 'logo'],
  requiredForInsert: ['name'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as Teams,
  $input: null as unknown as TeamsInput
} as const;

// Table tid
export interface Tid {
  id: string | null;
}
export interface TidInput {
  id?: string | null;
}
const tid = {
  tableName: 'tid',
  columns: ['id'],
  requiredForInsert: [],
  primaryKey: null,
  foreignKeys: {},
  $type: null as unknown as Tid,
  $input: null as unknown as TidInput
} as const;

// Table tournament_methods
export interface TournamentMethods {
  id: number;
  name: string | null;
  description: string | null;
}
export interface TournamentMethodsInput {
  id?: number;
  name?: string | null;
  description?: string | null;
}
const tournament_methods = {
  tableName: 'tournament_methods',
  columns: ['id', 'name', 'description'],
  requiredForInsert: [],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as TournamentMethods,
  $input: null as unknown as TournamentMethodsInput
} as const;

// Table tournament_players
export interface TournamentPlayers {
  player_id: string;
  tournament_id: number;
  team_id: number | null;
  gamedata: Json | null;
}
export interface TournamentPlayersInput {
  player_id: string;
  tournament_id: number;
  team_id?: number | null;
  gamedata?: Json | null;
}
const tournament_players = {
  tableName: 'tournament_players',
  columns: ['player_id', 'tournament_id', 'team_id', 'gamedata'],
  requiredForInsert: ['player_id', 'tournament_id'],
  primaryKey: null,
  foreignKeys: {
    player_id: { table: 'users', column: 'id', $type: null as unknown as Users },
    tournament_id: { table: 'tournaments', column: 'id', $type: null as unknown as Tournaments },
  },
  $type: null as unknown as TournamentPlayers,
  $input: null as unknown as TournamentPlayersInput
} as const;

// Table tournaments
export interface Tournaments {
  id: number;
  name: string | null;
  initial_name: string | null;
  description: string | null;
  start_date: Date | null;
  end_date: Date | null;
  method_id: number | null;
}
export interface TournamentsInput {
  id?: number;
  name?: string | null;
  initial_name?: string | null;
  description?: string | null;
  start_date?: Date | null;
  end_date?: Date | null;
  method_id?: number | null;
}
const tournaments = {
  tableName: 'tournaments',
  columns: ['id', 'name', 'initial_name', 'description', 'start_date', 'end_date', 'method_id'],
  requiredForInsert: [],
  primaryKey: 'id',
  foreignKeys: { method_id: { table: 'tournament_methods', column: 'id', $type: null as unknown as TournamentMethods }, },
  $type: null as unknown as Tournaments,
  $input: null as unknown as TournamentsInput
} as const;

// Table user_gamedata
export interface UserGamedata {
  user_id: string;
  gamedata: Json | null;
}
export interface UserGamedataInput {
  user_id: string;
  gamedata?: Json | null;
}
const user_gamedata = {
  tableName: 'user_gamedata',
  columns: ['user_id', 'gamedata'],
  requiredForInsert: ['user_id'],
  primaryKey: 'user_id',
  foreignKeys: { user_id: { table: 'users', column: 'id', $type: null as unknown as Users }, },
  $type: null as unknown as UserGamedata,
  $input: null as unknown as UserGamedataInput
} as const;

// Table users
export interface Users {
  id: string;
  username: string;
  password: string;
  email: string;
}
export interface UsersInput {
  id?: string;
  username: string;
  password: string;
  email: string;
}
const users = {
  tableName: 'users',
  columns: ['id', 'username', 'password', 'email'],
  requiredForInsert: ['username', 'password', 'email'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as Users,
  $input: null as unknown as UsersInput
} as const;


export interface TableTypes {
  games: {
    select: Games;
    input: GamesInput;
  };
  schema_migrations: {
    select: SchemaMigrations;
    input: SchemaMigrationsInput;
  };
  teams: {
    select: Teams;
    input: TeamsInput;
  };
  tid: {
    select: Tid;
    input: TidInput;
  };
  tournament_methods: {
    select: TournamentMethods;
    input: TournamentMethodsInput;
  };
  tournament_players: {
    select: TournamentPlayers;
    input: TournamentPlayersInput;
  };
  tournaments: {
    select: Tournaments;
    input: TournamentsInput;
  };
  user_gamedata: {
    select: UserGamedata;
    input: UserGamedataInput;
  };
  users: {
    select: Users;
    input: UsersInput;
  };
}

export const tables = {
  games,
  schema_migrations,
  teams,
  tid,
  tournament_methods,
  tournament_players,
  tournaments,
  user_gamedata,
  users,
}
